# n개의 페어를 이용한 최솟값(min(a,b)) 의 합으로 만들 수 있는 가장 큰 수

nums = [1,4,3,2]

# 1. 오름차순으로 풀기
"""
정렬된 리스트(오름차순이든 내림차순이든) 안의 요소들로 페어를 만들 때
바로 옆에 있는 값으로 페어를 만들어야 가장 큰 최솟값을 얻을 수 있음
nums를 정렬하면 [1,2,3,4]가 되는데 1은 2와 페어가 되든, 4와 페어가 되든 결국 최솟값은 1이기 때문에 큰 숫자랑 페어가 되면 손해(?)이기 때문
그러면 순서대로 페어를 만들어서 넣어주면 되므로 for문을 사용할 수 있음
"""

sum = 0
pair = []
nums.sort()

for n in nums:
    pair.append(n) #리스트에 있는 요소들을 하나씩 페어를 만들어준다
    if len(pair) == 2: #페어(리스트에 요소 두개가 들어갔을 경우)
        sum += min(pair)
        pair = []

print(sum)

# 2. 짝수 번째 값 계산
"""
페어는 요소 도개씩 짝이 되는 거니까 항상 짝수번째 값(왼쪽에 있는 숫자, 리스트는 0부터 시작하니까...짝수번째 애들이 페어의 최솟값인 왼쪽을 담당)이 최솟값이 될 수 밖에 없다
So, 인덱스 번호가 짝수인 경우 그 값끼리 더해주기만 하면 ok
"""

sum = 0
nums.sort()

for i, n in enumerate(nums): # i:인덱스번호, n:해당요소값
    if i % 0: #인덱스번호가 짝수일경우
        sum += n

print(sum)

# 또는 정렬된 리스의 짝수번째 요소만 더하기

print(sum(sorted(nums)[::2]))
